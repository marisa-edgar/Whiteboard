Question #3: Compressing Strings
Write an algorithm that takes a string with repeated characters and compresses them, using a number to show how many times the repeated character has been compressed. For instance, aaa would be written as 3a. Solve the problem with and without recursion.

Example
Input: "aaabccdddda"

Output: "3ab2c4da"

// without recursion 

let input = "aaabccdddda";

function counter(input) {
    let count = 0;
    let arr = input.split("");
    let output = [];
    for (let i = 0; i < arr.length; i ++) {
        arr[i] === arr[i + 1]
        count ++;
    console.log(count);
    if (count === 1) {
        output.push(arr[i]);
    } else {
        output.push(count + arr[i]);
    }
}  
    return output;
}














// with recursion 

let input = "aaabccdddda"
